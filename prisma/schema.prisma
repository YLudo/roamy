generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String        @id @default(cuid())
  name                String        @unique
  email               String        @unique
  emailVerified       DateTime?
  image               String?
  password            String?
  accounts            Account[]
  travels             Travel[]
  participatedTravels Participant[]
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@id([provider, providerAccountId])
}

model Travel {
  id           String        @id @default(cuid())
  title        String
  startDate    String?
  endDate      String?
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  participants Participant[]
  expenses     Expense[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Participant {
  id        String   @id @default(cuid())
  userId    String
  travelId  String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  travel    Travel   @relation(fields: [travelId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, travelId])
}

model Expense {
  id        String          @id @default(cuid())
  title     String
  category  ExpenseCategory
  amount    Float
  date      DateTime?
  travelId  String
  travel    Travel          @relation(fields: [travelId], references: [id], onDelete: Cascade)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

enum ExpenseCategory {
  ACCOMODATION
  MEAL
  ACTIVITY
  TRANSPORT
  OTHER
}
